---
import BaseLayout from './BaseLayout.astro';
import 'prismjs/themes/prism-tomorrow.css';
import 'prismjs/plugins/line-numbers/prism-line-numbers.css';
const { frontmatter } = Astro.props;
---

<BaseLayout title={frontmatter.title}>
    <article class="blog-post">
        {frontmatter.image && (
            <div class="hero-image-container">
                <img 
                    src={frontmatter.image}
                    alt={frontmatter.imageAlt || frontmatter.title}
                    class="hero-image"
                    loading="eager"
                />
            </div>
        )}
        <header class="post-header">
            <div class="post-meta">
                {new Date(frontmatter.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                })}
                {frontmatter.readingTime && 
                    <span class="reading-time">· {frontmatter.readingTime} min read</span>
                }
            </div>
            <h1>{frontmatter.title}</h1>
            {frontmatter.description &&
                <p class="post-description">{frontmatter.description}</p>
            }
            {frontmatter.tags && (
                <div class="post-tags">
                    {frontmatter.tags.map((tag: string) => (
                        <span class="tag">{tag}</span>
                    ))}
                </div>
            )}
            <div class="header-line"></div>
        </header>

        <div class="post-content">
            <slot />
        </div>

        {frontmatter.author && (
            <footer class="post-footer">
                <div class="author-card">
                    <img 
                        src={frontmatter.author.avatar || "https://source.unsplash.com/400x400/?professional-headshot"} 
                        alt={frontmatter.author.name}
                        class="author-avatar"
                    />
                    <div class="author-info">
                        <h3>{frontmatter.author.name}</h3>
                        <p>{frontmatter.author.bio}</p>
                    </div>
                </div>
            </footer>
        )}
    </article>
</BaseLayout>

<script>
    import Prism from 'prismjs';
    import 'prismjs/components/prism-javascript';
    import 'prismjs/components/prism-typescript';
    import 'prismjs/components/prism-python';
    import 'prismjs/components/prism-bash';
    import 'prismjs/components/prism-json';
    import 'prismjs/components/prism-markdown';
    import 'prismjs/plugins/line-numbers/prism-line-numbers';

    // Initialize Prism
    Prism.highlightAll();

    // Add copy button to code blocks
    document.querySelectorAll('pre').forEach(block => {
        // Create wrapper for the code block
        const wrapper = document.createElement('div');
        wrapper.className = 'code-block-wrapper';
        block.parentNode.insertBefore(wrapper, block);
        wrapper.appendChild(block);

        // Add copy button
        const button = document.createElement('button');
        button.className = 'copy-button';
        button.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
            </svg>
        `;
        wrapper.appendChild(button);

        // Add click handler
        button.addEventListener('click', async () => {
            const code = block.querySelector('code')?.innerText || block.innerText;
            await navigator.clipboard.writeText(code);
            
            button.classList.add('copied');
            button.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="20 6 9 17 4 12"></polyline>
                </svg>
            `;
            
            setTimeout(() => {
                button.classList.remove('copied');
                button.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                        <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                    </svg>
                `;
            }, 2000);
        });
    });
</script>

<style>
    /* Base Post Styles */
    .blog-post {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
        font-family: var(--font-serif);
    }

    .hero-image-container {
        margin: -2rem -2rem 2rem -2rem;
        width: calc(100% + 4rem);
        height: 400px;
        overflow: hidden;
        border-radius: 0;
    }

    .hero-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    @media (min-width: 768px) {
        .hero-image-container {
            height: 500px;
            border-radius: 8px;
        }
    }

    /* Header Styles */
    .post-header {
        text-align: left;
        margin-bottom: 4rem;
        padding: 2rem 0;
    }

    .post-meta {
        font-family: var(--font-sans);
        font-style: italic;
        color: var(--grey6);
        margin-bottom: 1.5rem;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .reading-time {
        display: inline-flex;
        align-items: center;
        &::before {
            content: "·";
            margin-right: 0.5rem;
        }
    }

    .post-header h1 {
        font-size: 3.5rem;
        font-weight: 900;
        font-family: var(--font-title);
        line-height: 1.2;
        margin: 0.5rem 0 1.5rem;
        color: var(--grey1);
        letter-spacing: -0.02em;
    }

    .post-description {
        font-family: var(--font-serif);
        font-size: 1.3rem;
        line-height: 1.6;
        color: var(--grey3);
        margin: 1.5rem 0;
        font-style: italic;
        max-width: 100%;
    }

    .post-tags {
        display: flex;
        gap: 0.5rem;
        margin: 1.5rem 0;
        flex-wrap: wrap;
    }

    .tag {
        font-family: var(--font-sans);
        padding: 0.4rem 1rem;
        background: var(--grey13);
        color: var(--grey4);
        border-radius: 20px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
        text-decoration: none;
    }

    .tag:hover {
        background: var(--grey12);
        color: var(--grey2);
        transform: translateY(-1px);
    }

    .header-line {
        height: 1px;
        background-color: var(--grey11);
        width: 100%;
        margin: 2rem 0;
    }

    /* Content Typography */
    .post-content {
        font-family: var(--font-serif);
        font-size: 1.2rem;
        line-height: 1.8;
        color: var(--grey2);
        margin: 0 auto;
        max-width: 700px;
    }

    /* Headings */
    .post-content :global(h2) {
        font-family: var(--font-title);
        font-size: 2.2rem;
        font-weight: 700;
        margin: 4rem 0 1.5rem;
        color: var(--grey1);
        letter-spacing: -0.01em;
        border-bottom: 1px solid var(--grey11);
        padding-bottom: 0.5rem;
    }

    .post-content :global(h3) {
        font-family: var(--font-title);
        font-size: 1.8rem;
        font-weight: 700;
        margin: 3rem 0 1rem;
        color: var(--grey1);
    }

    .post-content :global(h4) {
        font-family: var(--font-title);
        font-size: 1.4rem;
        font-weight: 600;
        margin: 2.5rem 0 1rem;
        color: var(--grey2);
    }

    /* Lists */
    .post-content :global(ul),
    .post-content :global(ol) {
        margin: 1.5rem 0 1.5rem 1rem;
        padding-left: 1.5rem;
    }

    .post-content :global(li) {
        margin-bottom: 0.75rem;
        line-height: 1.7;
        position: relative;
        padding-left: 0.5rem;
    }

    .post-content :global(ul li::marker) {
        color: var(--grey6);
    }

    .post-content :global(ol) {
        counter-reset: item;
    }

    .post-content :global(ol li) {
        counter-increment: item;
    }

    /* Code Blocks */
    .post-content :global(.code-block-wrapper) {
        position: relative;
        margin: 2rem -2rem;
        background: var(--grey14);
        padding: 1rem;
    }

    @media (min-width: 768px) {
        .post-content :global(.code-block-wrapper) {
            border-radius: 8px;
            margin: 2rem 0;
        }
    }

    .post-content :global(pre) {
        background: var(--grey13);
        padding: 1.5rem;
        border-radius: 4px;
        overflow-x: auto;
        border: 1px solid var(--grey11);
        margin: 0;
    }

    .post-content :global(pre code) {
        font-family: var(--font-mono);
        font-size: 0.9em;
        line-height: 1.6;
        display: block;
        padding-right: 1rem;
        color: var(--grey3);
    }

    .post-content :global(.copy-button) {
        position: absolute;
        top: 1.5rem;
        right: 1.5rem;
        padding: 0.5rem;
        background: var(--grey12);
        border: 1px solid var(--grey11);
        border-radius: 4px;
        color: var(--grey4);
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0.6;
    }

    .post-content :global(.copy-button:hover) {
        opacity: 1;
        background: var(--grey11);
        color: var(--grey2);
    }

    /* Inline Code */
    .post-content :global(:not(pre) > code) {
        font-family: var(--font-mono);
        background: var(--grey13);
        padding: 0.2em 0.4em;
        border-radius: 4px;
        font-size: 0.9em;
        color: var(--accent-color);
        border: 1px solid var(--grey11);
        white-space: nowrap;
    }

    /* Blockquotes */
    .post-content :global(blockquote) {
        border-left: 4px solid var(--accent-color);
        padding: 1rem 1.5rem;
        margin: 2rem 0;
        background: var(--grey13);
        border-radius: 0 8px 8px 0;
        font-style: italic;
        color: var(--grey3);
    }

    .post-content :global(blockquote > :first-child) {
        margin-top: 0;
    }

    .post-content :global(blockquote > :last-child) {
        margin-bottom: 0;
    }

    .post-content :global(blockquote cite) {
        display: block;
        margin-top: 1rem;
        font-size: 0.9em;
        color: var(--grey6);
        font-style: normal;
    }

    /* Tables */
    .post-content :global(table) {
        width: 100%;
        margin: 2rem 0;
        border-collapse: collapse;
        font-size: 0.95em;
        line-height: 1.5;
        overflow-x: auto;
        display: block;
    }

    .post-content :global(th),
    .post-content :global(td) {
        padding: 0.75rem;
        border: 1px solid var(--grey11);
        text-align: left;
    }

    .post-content :global(th) {
        background: var(--grey13);
        font-weight: 600;
        color: var(--grey2);
    }

    .post-content :global(tr:nth-child(even)) {
        background: var(--grey14);
    }

    /* Images */
    .post-content :global(img) {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin: 2rem auto;
        display: block;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .post-content :global(figure) {
        margin: 2.5rem auto;
        text-align: center;
    }

    .post-content :global(figcaption) {
        text-align: center;
        font-size: 0.9em;
        color: var(--grey6);
        margin-top: 0.75rem;
        font-style: italic;
    }

    /* Callouts */
    .post-content :global(.callout) {
        margin: 2rem 0;
        padding: 1.5rem;
        border-radius: 8px;
        border-left: 4px solid;
        background: var(--grey13);
    }

    .post-content :global(.callout-title) {
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .post-content :global(.callout-content) {
        margin: 0;
    }

    .post-content :global(.callout-info) {
        border-color: var(--info-color);
    }

    .post-content :global(.callout-warning) {
        border-color: var(--warning-color);
    }

    .post-content :global(.callout-success) {
        border-color: var(--success-color);
    }

    /* Author Card */
    .author-card {
        display: flex;
        align-items: center;
        gap: 2rem;
        margin: 4rem auto 0;
        padding: 2rem;
        background: var(--grey13);
        border-radius: 12px;
        border: 1px solid var(--grey11);
        max-width: 700px;
    }

    .author-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
    }

    .author-info h3 {
        font-family: var(--font-title);
        margin: 0 0 0.5rem;
        font-size: 1.2rem;
        color: var(--grey1);
    }

    .author-info p {
        font-family: var(--font-serif);
        margin: 0;
        font-size: 0.95rem;
        color: var(--grey4);
        line-height: 1.6;
    }

    /* Mobile Styles */
    @media (max-width: 768px) {
        .blog-post {
            padding: 1rem;
        }

        .post-header {
            padding: 1rem 0;
        }

        .post-header h1 {
            font-size: 2.5rem;
            margin: 0.5rem 0 1rem;
        }

        .post-description {
            font-size: 1.1rem;
        }

        .post-content {
            font-size: 1.1rem;
        }

        .author-card {
            flex-direction: column;
            text-align: center;
            padding: 1.5rem;
            gap: 1rem;
        }

        .post-content :global(table) {
            margin: 1.5rem -1rem;
            width: calc(100% + 2rem);
        }

        .post-content :global(pre) {
            border-radius: 0;
        }

        .post-content :global(.callout) {
            border-radius: 4px;
        }
    }
</style>
